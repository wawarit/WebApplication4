
@{
    ViewBag.Title = "Index";
    Layout = null;
}

<style media="screen">
    .container {
        border: 0px solid darkgrey;
        border-radius: 3px;
        padding: 5px;
        width: 99%;
        margin: 0 auto;
    }

    .hightligh a {
        background: #FF0000 !important;
        color: #FFFF00 !important;
    }

    .highlight-event a {
        background: #32cd32 !important;
        color: #000000 !important;
    }


    .ui-datepicker {
        background: #B0C4DE;
        border: 1px solid #555;
        color: #000000;
    }
</style>

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/themes/smoothness/jquery-ui.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script>

<script>
    $(document).ready(function () {
        /*var queryDate = '1/1/2022';*/
        var queryDate = null;

        /*queryDate = '1/1/' + currentYear;*/


        $(function () {
            $("#year").change(function () {
                $('#datepicker').datepicker("destroy");
                var conceptName = $('#year').find(":selected").text();
                higHlightDays(conceptName);
            });

        });
        //$(function () {
        //    $("#day").datepicker({
        //        onSelect: function (date, datepicker) {
        //            if (date != "") {
        //                alert("Selected Date: " + date);
        //            }
        //        }
        //    });
        //});

        higHlightDays();
        function higHlightDays(year)
        {
            if (year == null) {
                queryDate = null;
            }
            else {
                queryDate = '1/1/' + year;
                /*queryDate = day + month + year;*/
            }
            var dataHoliday =
            {
                Year: year
            }
            $.ajax({
                url: '@Url.Action("getEventday", "Calendar")',
                type: "POST",
                data: JSON.stringify(dataHoliday),
                dataType: "json",
                contentType: "application/json",
                beforeSend: function () {

                },
                success: function (json) {
                    console.log(json);
                    if ((json[0].Status.Status) && (json[0].Status.Success)) {

                        var listDataTableaHoliday = json[0].Details.dataTableaHoliday;
                        var listDataTableEvents = json[0].Details.dataTableEvents
                        var dataHoliday = JSON.parse(listDataTableaHoliday);
                        var dataEvents = JSON.parse(listDataTableEvents);

                        $('#datepicker').datepicker({
                            beforeShowDay: function (date) {
                                return setHoliday(date, dataHoliday, dataEvents);
                            }
                            ,defaultDate: queryDate
                        });


                    }
                },
                complete: function () {
                    //$(".loading").hide();
                },
                error: function (response) {
                    // document.getElementById("text-error").innerHTML = "You can't check back the past year.";
                }
            });
        }


        function setHoliday(date, jsonHoliday,jsonEvents) {

            if (jsonHoliday != null)
            {
                const dates = [];
                const tips = [];
                for (let i = 0; i < jsonHoliday.length; i++) {
                    dates.push(jsonHoliday[i].Day_Holiday);
                    tips.push(jsonHoliday[i].Details);
                }
                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                var day = date.getDate();
                var newdate = day + "/" + month + '/' + year;
                for (var i = 0; i < dates.length; i++) {
                    if (dates[i].toString() == newdate) {
                        return [true, 'hightligh', tips[i]];
                    }
                }
            }

            if (jsonEvents != null)
            {
                const eventDates = [];
                const eventTitles = [];

                for (let i = 0; i < jsonEvents.length; i++) {
                    eventDates.push(jsonEvents[i].EventDate);
                    eventTitles.push(jsonEvents[i].Subject);
                }

                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                var day = date.getDate();
                var newDate = day + "/" + month + '/' + year;

                for (var i = 0; i < eventDates.length; i++) {
                    if (eventDates[i].toString() == newDate) {
                        return [true, 'highlight-event', eventTitles[i]];
                    }
                }
            }

            return [true, ''];
        }

    });

</script>

<div class='container'>

    <select id="year">
        @for (int year = DateTime.Now.Year; year >= 2021; year--)
        {
            <option value="@year">@year</option>

        }
    </select>


    <div id="datepicker"></div>


</div>


<h2> </h2>
@*<h2> Events </h2>*@
<h2> </h2>
<style>
    .content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        /*border: 1px solid red;*/
    }

    .title {
        width: 50%;
        justify-content: center;
        align-items: center;
        color: #000000;
        font-size: 25px;
        font-weight: normal;
        text-align: center;
        margin: 0 20px 0 0;
        /* border: 1px solid red;*/
    }


    input[type="text"] {
        border: none;
        border-radius: 5px;
        padding: 8px;
        width: 200px;
        border: 1px solid #000000;
    }

    button[type="submit"] {
        padding: 10px;
        border: none;
        border-radius: 0 20px 20px 0;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
        margin-left: 10px;
        border: 1px solid #000000;
    }

    hr.style19 {
        width: 100%;
        border-top: 4px solid #1E5F74;
        color: #1E5F74;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .new-folder-items {
        max-width: 1000px;
        margin: 0 auto;
    }

    #create-folder-btn {
        background-color: #3795BD;
        border: none;
        color: white;
        padding: 8px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin-right: 16px;
        cursor: pointer;
        border-radius: 10px;
    }

    /* Style the modal */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgba(0,0,0,0.4); /* Black background with opacity */
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 30%; /* Could be more or less, depending on screen size */
        height: 30%;
        border-radius: 5px;
    }

    /* Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    #submit {
        background-color: #6495ED;
        color: white;
        padding: 12px 20px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
        align-items: center;
        display: flex;
        justify-content: flex-end;
        float: right;
        position: relative;
        font-size: 14px;
        font-weight: 400;
        box-sizing: border-box;
        text-decoration: none;
        text-align: center;
        min-width: 80px;
        height: 32px;
    }

    .upload-btn {
        background-color: #dddddd;
        color: black;
        padding: 8px 16px;
        border: none;
        text-align: center;
        cursor: pointer;
        border-radius: 10px;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin-right: 16px;
    }

    .styled-table {
        border-collapse: collapse;
        margin: auto;
        font-size: 0.9em;
        font-family: sans-serif;
        min-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
        /*width: 80%;*/
    }

        .styled-table thead tr {
            background-color: #f2f2f2;
            color: #000000;
            text-align: left;
        }

        .styled-table th,
        .styled-table td {
            padding: 12px 15px;
        }

        .styled-table tbody tr {
            border-bottom: 1px solid #dddddd;
        }

            .styled-table tbody tr:last-of-type {
                border-bottom: 2px solid #f2f2f2;
            }
</style>
@*content*@
<div class="new-folder-items">

    <a href="ViewHoliday" class="upload-btn">Item Holiday</a>
    <a href="ViewEvents" class="upload-btn">Item Events</a>
</div>

<table class="styled-table">
    <thead>
        <tr>
            <th>EventID</th>
            <th>EventDate</th>
            <th>StartTime</th>
            <th>EndTime</th>
            <th>Subject</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.EventID</td>
                    <td>@item.EventDate</td>
                    <td>@item.StartTime</td>
                    <td>@item.EndTime</td>
                    <td>@item.Subject</td>
                </tr>
            }
        }

        <!-- and so on... -->
    </tbody>
</table>

<script>
    const jsonEvents = [];
    if (jsonEvents != null) {
        const eventID = [];
        const eventDate = [];
        const startTime = [];
        const endTime = [];
        const subject = [];

        for (let i = 0; i < jsonEvents.length; i++) {
            eventID.push(jsonEvents[i].EventID);
            eventDate.push(jsonEvents[i].EventDate);
            startTime.push(jsonEvents[i].StartTime);
            endTime.push(jsonEvents[i].EndTime);
            subject.push(jsonEvents[i].Subject);
            //// loop over Subjects array inside each item
            //for (let j = 0; j < jsonEvents[i].Subjects.length; j++) {
            //    console.log(jsonEvents[i].Subjects[j]);
            //}
        }
    }
</script>













